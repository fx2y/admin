@_ECHO_ON

git clone https://github.com/$GITHUB_NS/go-sample-app.git
hub clone https://github.com/springone-tour-2020-cicd/go-sample-app.git && cd go-sample-app
hub fork --remote-name origin
git ls-remote --heads | grep scenario
# Fill this in with the branch name (e.g. BRANCH=scenario-1-finished)
BRANCH=
git checkout --track origin/$BRANCH
find . -name *.yaml -exec sed -i "s//springone-tour-2020-cicd//${GITHUB_NS}/g" {} +
find . -name *.yaml -exec sed -i "s/ springone-tour-2020-cicd/ ${IMG_NS}/g" {} +
git add -A
git commit -m "Reset from branch $BRANCH, updated namespaces"
git branch -m master old-master
git branch -m $BRANCH master
git push -f -u origin master
git push -f origin old-master
git branch -d old-master




cd go-sample-app/ops
diff -b deployment.yaml deployment-prod.yaml
diff -b service.yaml service-prod.yaml
rm *-prod.yaml
mkdir base
mv *.yaml base
ls base
sed -i '' '/namespace: dev/d' base/*.yaml
mkdir -p overlays/dev
cd overlays/dev
touch kustomization.yaml
kustomize edit add base ../../base/deployment.yaml
kustomize edit add base ../../base/service.yaml
kustomize edit set namespace dev
bat kustomization.yaml
kustomize build --load_restrictor none .
kustomize build --load_restrictor none . | kubectl apply -f -
k get all -n dev
cd ..
mkdir prod
cd prod
touch kustomization.yaml
kustomize edit add base ../../base/deployment.yaml
kustomize edit add base ../../base/service.yaml
kustomize edit set namespace prod
kustomize build --load_restrictor none . | kubectl apply -f -
k get all -n prod
tree ../..
kustomize edit set nameprefix 'prod-'
kustomize build --load_restrictor none . | grep prod-
kustomize build --load_restrictor none . | kubectl apply -f -

k rollout status deployment/prod-go-sample-app -n prod
k get all -n prod
k delete deployment go-sample-app -n prod
k delete service go-sample-app -n prod

# Add an environment variable
cp $DEMO/kustomize/ops/overlays/prod/patch.yaml .
bat patch.yaml
kustomize edit add patch patch.yaml
bat kustomization.yaml
kustomize build --load_restrictor none . | kubectl apply -f -

kubectl rollout status deployment/prod-go-sample-app -n prod
kubectl logs $(kubectl get pods -n prod -o jsonpath="{.items[0].metadata.name}") -n prod

cp $DEMO/kustomize/ops/overlays/prod/memorylimit_patch.yaml
bat memorylimit_patch.yaml
cp $DEMO/kustomize/ops/overlays/prod/healthcheck_patch.yaml
bat healthcheck_patch.yaml
kustomize edit add patch memorylimit_patch.yaml
kustomize edit add patch healthcheck_patch.yaml
kustomize build --load_restrictor none . | kubectl apply -f -

kubectl rollout status deployment/prod-go-sample-app -n prod
kubectl get all -n prod
kubectl port-forward service/prod-go-sample-app 8080:8080 -n prod 2>&1 > /dev/null &
curl localhost:8080
pkill kubectl && wait $!
cat <<EOF >>kustomization.yaml
commonLabels:
env: prod
EOF
kustomize build --load_restrictor none . | grep -C 3 env
kustomize build --load_restrictor none . | kubectl delete -f -
kustomize build --load_restrictor none . | kubectl apply -f -

kubectl get all -n prod --show-labels
git add -A
git commit -m 'Changes from the Kustomize scenario'
git push origin master
