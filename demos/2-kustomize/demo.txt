#_ECHO_OFF
clear
cd ~/workspace-demo/go-demo-app
#_ECHO_ON

#_ECHO_# Initial deploy

mkdir ops
kubectl create deployment go-demo-app --image=$IMG_NS/go-demo-app:pack-1.0.0 -n dev --dry-run=client -o yaml > deployment.yaml
k create service clusterip go-demo-app --tcp=8080:8080 -n dev --dry-run=client -o yaml > service.yaml

tree .
yq r -C deployment.yaml
yqc service.yaml
k apply -f .
kns dev
k get all
#k port-forward svc/go-demo-app 8080 2>&1 > /dev/null&
#curl localhost:8080
#pkill kubectl && wait $!

#_ECHO_# Promote to prod

k create deployment go-demo-app --image=$IMG_NS/go-demo-app:pack-1.0.0 -n prod --dry-run=client -o yaml > deployment-prod.yaml
k create service clusterip go-demo-app --tcp=8080:8080 -n prod --dry-run=client -o yaml > service-prod.yaml
k apply -f deployment-prod.yaml -f service-prod.yaml
kns prod
k get all
k port-forward svc/go-demo-app 8080 2>&1 > /dev/null &
curl localhost:8080
pkill kubectl && wait $!

#_ECHO_# Remove duplication

catd deployment.yaml deployment-prod.yaml
catd service.yaml service-prod.yaml
rm -rf *.yaml
cd ..
cd go-demo-app-ops
cd ops/base
yqc deployment.yaml
yqc service.yaml

cd ../overlays/dev
yqc kustomization.yaml
kns dev
kustomize build --load_restrictor none .
kustomize build --load_restrictor none . | kubectl apply -f -
k get all
kns prod
cd ../prod
yqc kustomization.yaml
yqc env_patch.yaml
yqc kustomization.yaml
kustomize build --load_restrictor none . | kubectl apply -f -
k get all
k delete deploy go-demo-app
k delete svc go-demo-app

k get all --show-labels
k describe pod
k logs

# Result: Ops repo explained
