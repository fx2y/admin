clear
cd ~/workspace-demo/go-demo-app-ops/cicd/tekton
k apply -f pvc.yaml -f sa.yaml
@_ECHO_ON

k api-resources --api-group='tekton.dev'
kns tekton-pipelines

yqc build-pipeline.yaml

# Go to https://github.com/tektoncd/catalog

tkn task list

# Observe parameters and placeholders in the Tasks on GitHub

# Automate triggering

yqc build-event-listener.yaml
yqc build-trigger-template.yaml
yqc build-trigger-binding.yaml
yqc update-image-revision-task.yaml

yqc ops-dev-trigger-binding.yaml
yqc ops-dev-pipeline.yaml
yqc ops-dev-task.yaml

kns tekton-pipelines

kubectl apply -f .

. ~/create_github_webhook.sh > /dev/null
. ~/create_dockerhub_webhook.sh

cd ../argo
yqc argo-deploy-image.yaml
yqc argo-deploy-tekton.yaml

kns argocd
k apply -f .

# Test it out

cd ../../../go-demo-app
sed -i '' 's/cnbp/s1t/g' hello-server.go
git add hello-server.go
git commit -m "Hello Spring One Tour"
git push origin master

kns tekton-pipelines
tkn pipelinerun list
tkn pipelinerun logs -f

kns default
k get builds
k describe build

logs -image go-demo-app -build

tkn pipelinerun list
tkn pipelinerun logs -f

kns dev
k get deploy

k port-forward svc/dev-go-demo-app 8083:8080 &
curl localhost:8083

# Argo UI
